trigger:
- main

variables:
  - group: var

stages:
- stage: Build
  displayName: Build image
  pool:
    name: UTB
  jobs:
  - job: BuildAndPush
    displayName: Build
    pool:
      name: UTB
    steps:
    - task: Docker@2
      inputs:
        command: 'build'
        repository: $(AWS_ECR_MAGE_URI)
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)

- stage: push
  displayName: Build image
  dependsOn: Build
  jobs:
    - job : push
      displayName: 'Push'
      pool:
        name: utb
      steps:
      - task: ECRPushImage@1
        inputs:
           awsCredentials: 'AWS'
           AWS_REGION: $(AWS_REGION)
           imageSource: 'imagename'
           sourceImageTag: $(Build.BuildId)
           pushTag: $(Build.BuildId)
           sourceImageName: $(AWS_ECR_MAGE_URI)
           repositoryName: $(AWS_ECR_REPOSITORY_NAME)

- stage: Provision
  displayName: 'Creating terraform on Azure'
  dependsOn: push
  jobs:
    - job : provision
      displayName: 'Provision container instance'
      pool:
        name: UTB
      variables: # vars from azure devOps in library
      - group: terraform
      steps:
        - script: |
            set -e 

            terraform init -input=false
            terraform apply -input=false -auto-approve
          name: 'RunTerraform'
          displayName: 'Run Terraform'
          env: # these vars are being passed from the variable library that we specified in Azure DevOps
            AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
            AWS_SECRET_KEY: $(AWS_SECRET_KEY)
            TF_VAR_imagebuild: $(Build.BuildId)